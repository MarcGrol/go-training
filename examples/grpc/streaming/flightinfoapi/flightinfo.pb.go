// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flightinfo.proto

package flightinfoapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Direction int32

const (
	Direction_DIRECTION_UNKNOWN Direction = 0
	Direction_ARRIVAL           Direction = 1
	Direction_DEPARTURE         Direction = 2
)

var Direction_name = map[int32]string{
	0: "DIRECTION_UNKNOWN",
	1: "ARRIVAL",
	2: "DEPARTURE",
}

var Direction_value = map[string]int32{
	"DIRECTION_UNKNOWN": 0,
	"ARRIVAL":           1,
	"DEPARTURE":         2,
}

func (x Direction) String() string {
	return proto.EnumName(Direction_name, int32(x))
}

func (Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{0}
}

type FlightStatus int32

const (
	FlightStatus_FLIGHT_STATUS_UNKNOWN FlightStatus = 0
	FlightStatus_DEPARTING             FlightStatus = 1
	FlightStatus_DEPARTED              FlightStatus = 2
	FlightStatus_LANDING               FlightStatus = 3
	FlightStatus_LANDED                FlightStatus = 4
)

var FlightStatus_name = map[int32]string{
	0: "FLIGHT_STATUS_UNKNOWN",
	1: "DEPARTING",
	2: "DEPARTED",
	3: "LANDING",
	4: "LANDED",
}

var FlightStatus_value = map[string]int32{
	"FLIGHT_STATUS_UNKNOWN": 0,
	"DEPARTING":             1,
	"DEPARTED":              2,
	"LANDING":               3,
	"LANDED":                4,
}

func (x FlightStatus) String() string {
	return proto.EnumName(FlightStatus_name, int32(x))
}

func (FlightStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{1}
}

type GetInfoOnFlightRequest struct {
	Date                 *Date     `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Direction            Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=flightinfoapi.Direction" json:"direction,omitempty"`
	FlightNumber         string    `protobuf:"bytes,3,opt,name=flightNumber,proto3" json:"flightNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetInfoOnFlightRequest) Reset()         { *m = GetInfoOnFlightRequest{} }
func (m *GetInfoOnFlightRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoOnFlightRequest) ProtoMessage()    {}
func (*GetInfoOnFlightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{0}
}

func (m *GetInfoOnFlightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoOnFlightRequest.Unmarshal(m, b)
}
func (m *GetInfoOnFlightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoOnFlightRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoOnFlightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoOnFlightRequest.Merge(m, src)
}
func (m *GetInfoOnFlightRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoOnFlightRequest.Size(m)
}
func (m *GetInfoOnFlightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoOnFlightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoOnFlightRequest proto.InternalMessageInfo

func (m *GetInfoOnFlightRequest) GetDate() *Date {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *GetInfoOnFlightRequest) GetDirection() Direction {
	if m != nil {
		return m.Direction
	}
	return Direction_DIRECTION_UNKNOWN
}

func (m *GetInfoOnFlightRequest) GetFlightNumber() string {
	if m != nil {
		return m.FlightNumber
	}
	return ""
}

type GetFlightReply struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Flight               *Flight  `protobuf:"bytes,2,opt,name=flight,proto3" json:"flight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFlightReply) Reset()         { *m = GetFlightReply{} }
func (m *GetFlightReply) String() string { return proto.CompactTextString(m) }
func (*GetFlightReply) ProtoMessage()    {}
func (*GetFlightReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{1}
}

func (m *GetFlightReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlightReply.Unmarshal(m, b)
}
func (m *GetFlightReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlightReply.Marshal(b, m, deterministic)
}
func (m *GetFlightReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlightReply.Merge(m, src)
}
func (m *GetFlightReply) XXX_Size() int {
	return xxx_messageInfo_GetFlightReply.Size(m)
}
func (m *GetFlightReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlightReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlightReply proto.InternalMessageInfo

func (m *GetFlightReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *GetFlightReply) GetFlight() *Flight {
	if m != nil {
		return m.Flight
	}
	return nil
}

type HistoryRequest struct {
	StartDate            *Date    `protobuf:"bytes,1,opt,name=startDate,proto3" json:"startDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryRequest) Reset()         { *m = HistoryRequest{} }
func (m *HistoryRequest) String() string { return proto.CompactTextString(m) }
func (*HistoryRequest) ProtoMessage()    {}
func (*HistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{2}
}

func (m *HistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryRequest.Unmarshal(m, b)
}
func (m *HistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryRequest.Marshal(b, m, deterministic)
}
func (m *HistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryRequest.Merge(m, src)
}
func (m *HistoryRequest) XXX_Size() int {
	return xxx_messageInfo_HistoryRequest.Size(m)
}
func (m *HistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryRequest proto.InternalMessageInfo

func (m *HistoryRequest) GetStartDate() *Date {
	if m != nil {
		return m.StartDate
	}
	return nil
}

type ReceiptConfirmirmation struct {
	FlightUid            string   `protobuf:"bytes,1,opt,name=flightUid,proto3" json:"flightUid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptConfirmirmation) Reset()         { *m = ReceiptConfirmirmation{} }
func (m *ReceiptConfirmirmation) String() string { return proto.CompactTextString(m) }
func (*ReceiptConfirmirmation) ProtoMessage()    {}
func (*ReceiptConfirmirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{3}
}

func (m *ReceiptConfirmirmation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptConfirmirmation.Unmarshal(m, b)
}
func (m *ReceiptConfirmirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptConfirmirmation.Marshal(b, m, deterministic)
}
func (m *ReceiptConfirmirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptConfirmirmation.Merge(m, src)
}
func (m *ReceiptConfirmirmation) XXX_Size() int {
	return xxx_messageInfo_ReceiptConfirmirmation.Size(m)
}
func (m *ReceiptConfirmirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptConfirmirmation.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptConfirmirmation proto.InternalMessageInfo

func (m *ReceiptConfirmirmation) GetFlightUid() string {
	if m != nil {
		return m.FlightUid
	}
	return ""
}

type FlightPdu struct {
	// Types that are valid to be assigned to Payload:
	//	*FlightPdu_Heartbeat
	//	*FlightPdu_Flight
	Payload              isFlightPdu_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FlightPdu) Reset()         { *m = FlightPdu{} }
func (m *FlightPdu) String() string { return proto.CompactTextString(m) }
func (*FlightPdu) ProtoMessage()    {}
func (*FlightPdu) Descriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{4}
}

func (m *FlightPdu) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlightPdu.Unmarshal(m, b)
}
func (m *FlightPdu) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlightPdu.Marshal(b, m, deterministic)
}
func (m *FlightPdu) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlightPdu.Merge(m, src)
}
func (m *FlightPdu) XXX_Size() int {
	return xxx_messageInfo_FlightPdu.Size(m)
}
func (m *FlightPdu) XXX_DiscardUnknown() {
	xxx_messageInfo_FlightPdu.DiscardUnknown(m)
}

var xxx_messageInfo_FlightPdu proto.InternalMessageInfo

type isFlightPdu_Payload interface {
	isFlightPdu_Payload()
}

type FlightPdu_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,1,opt,name=heartbeat,proto3,oneof"`
}

type FlightPdu_Flight struct {
	Flight *Flight `protobuf:"bytes,2,opt,name=flight,proto3,oneof"`
}

func (*FlightPdu_Heartbeat) isFlightPdu_Payload() {}

func (*FlightPdu_Flight) isFlightPdu_Payload() {}

func (m *FlightPdu) GetPayload() isFlightPdu_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *FlightPdu) GetHeartbeat() *Heartbeat {
	if x, ok := m.GetPayload().(*FlightPdu_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

func (m *FlightPdu) GetFlight() *Flight {
	if x, ok := m.GetPayload().(*FlightPdu_Flight); ok {
		return x.Flight
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FlightPdu) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FlightPdu_Heartbeat)(nil),
		(*FlightPdu_Flight)(nil),
	}
}

type Heartbeat struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{5}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

type Flight struct {
	FlightUid            string       `protobuf:"bytes,1,opt,name=flightUid,proto3" json:"flightUid,omitempty"`
	FlightNumber         string       `protobuf:"bytes,2,opt,name=flightNumber,proto3" json:"flightNumber,omitempty"`
	Direction            Direction    `protobuf:"varint,3,opt,name=direction,proto3,enum=flightinfoapi.Direction" json:"direction,omitempty"`
	Date                 *Date        `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	ScheduledTime        *Time        `protobuf:"bytes,5,opt,name=scheduledTime,proto3" json:"scheduledTime,omitempty"`
	Origin               string       `protobuf:"bytes,6,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination          string       `protobuf:"bytes,7,opt,name=destination,proto3" json:"destination,omitempty"`
	Status               FlightStatus `protobuf:"varint,8,opt,name=status,proto3,enum=flightinfoapi.FlightStatus" json:"status,omitempty"`
	ActualTime           *Time        `protobuf:"bytes,9,opt,name=actualTime,proto3" json:"actualTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Flight) Reset()         { *m = Flight{} }
func (m *Flight) String() string { return proto.CompactTextString(m) }
func (*Flight) ProtoMessage()    {}
func (*Flight) Descriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{6}
}

func (m *Flight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flight.Unmarshal(m, b)
}
func (m *Flight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flight.Marshal(b, m, deterministic)
}
func (m *Flight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flight.Merge(m, src)
}
func (m *Flight) XXX_Size() int {
	return xxx_messageInfo_Flight.Size(m)
}
func (m *Flight) XXX_DiscardUnknown() {
	xxx_messageInfo_Flight.DiscardUnknown(m)
}

var xxx_messageInfo_Flight proto.InternalMessageInfo

func (m *Flight) GetFlightUid() string {
	if m != nil {
		return m.FlightUid
	}
	return ""
}

func (m *Flight) GetFlightNumber() string {
	if m != nil {
		return m.FlightNumber
	}
	return ""
}

func (m *Flight) GetDirection() Direction {
	if m != nil {
		return m.Direction
	}
	return Direction_DIRECTION_UNKNOWN
}

func (m *Flight) GetDate() *Date {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *Flight) GetScheduledTime() *Time {
	if m != nil {
		return m.ScheduledTime
	}
	return nil
}

func (m *Flight) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *Flight) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *Flight) GetStatus() FlightStatus {
	if m != nil {
		return m.Status
	}
	return FlightStatus_FLIGHT_STATUS_UNKNOWN
}

func (m *Flight) GetActualTime() *Time {
	if m != nil {
		return m.ActualTime
	}
	return nil
}

type Date struct {
	Year                 int32    `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month                int32    `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day                  int32    `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Date) Reset()         { *m = Date{} }
func (m *Date) String() string { return proto.CompactTextString(m) }
func (*Date) ProtoMessage()    {}
func (*Date) Descriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{7}
}

func (m *Date) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Date.Unmarshal(m, b)
}
func (m *Date) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Date.Marshal(b, m, deterministic)
}
func (m *Date) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Date.Merge(m, src)
}
func (m *Date) XXX_Size() int {
	return xxx_messageInfo_Date.Size(m)
}
func (m *Date) XXX_DiscardUnknown() {
	xxx_messageInfo_Date.DiscardUnknown(m)
}

var xxx_messageInfo_Date proto.InternalMessageInfo

func (m *Date) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Date) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *Date) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

type Time struct {
	Hour                 int32    `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	Minute               int32    `protobuf:"varint,2,opt,name=minute,proto3" json:"minute,omitempty"`
	Second               int32    `protobuf:"varint,3,opt,name=second,proto3" json:"second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Time) Reset()         { *m = Time{} }
func (m *Time) String() string { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()    {}
func (*Time) Descriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{8}
}

func (m *Time) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Time.Unmarshal(m, b)
}
func (m *Time) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Time.Marshal(b, m, deterministic)
}
func (m *Time) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Time.Merge(m, src)
}
func (m *Time) XXX_Size() int {
	return xxx_messageInfo_Time.Size(m)
}
func (m *Time) XXX_DiscardUnknown() {
	xxx_messageInfo_Time.DiscardUnknown(m)
}

var xxx_messageInfo_Time proto.InternalMessageInfo

func (m *Time) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *Time) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

func (m *Time) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_915e3e8708f9db11, []int{9}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("flightinfoapi.Direction", Direction_name, Direction_value)
	proto.RegisterEnum("flightinfoapi.FlightStatus", FlightStatus_name, FlightStatus_value)
	proto.RegisterType((*GetInfoOnFlightRequest)(nil), "flightinfoapi.GetInfoOnFlightRequest")
	proto.RegisterType((*GetFlightReply)(nil), "flightinfoapi.GetFlightReply")
	proto.RegisterType((*HistoryRequest)(nil), "flightinfoapi.HistoryRequest")
	proto.RegisterType((*ReceiptConfirmirmation)(nil), "flightinfoapi.ReceiptConfirmirmation")
	proto.RegisterType((*FlightPdu)(nil), "flightinfoapi.FlightPdu")
	proto.RegisterType((*Heartbeat)(nil), "flightinfoapi.Heartbeat")
	proto.RegisterType((*Flight)(nil), "flightinfoapi.Flight")
	proto.RegisterType((*Date)(nil), "flightinfoapi.Date")
	proto.RegisterType((*Time)(nil), "flightinfoapi.Time")
	proto.RegisterType((*Error)(nil), "flightinfoapi.Error")
}

func init() { proto.RegisterFile("flightinfo.proto", fileDescriptor_915e3e8708f9db11) }

var fileDescriptor_915e3e8708f9db11 = []byte{
	// 731 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x5b, 0x6f, 0xda, 0x48,
	0x14, 0xc6, 0x5c, 0xe3, 0x43, 0x2e, 0xce, 0xd9, 0x24, 0xf2, 0x66, 0x77, 0x25, 0x64, 0x69, 0xb5,
	0x28, 0xd2, 0x66, 0xb3, 0x44, 0x1b, 0x6d, 0x5f, 0x2a, 0x91, 0x40, 0x80, 0x36, 0x22, 0xd1, 0x00,
	0xad, 0xda, 0x97, 0x68, 0xb0, 0x07, 0x18, 0x15, 0x3c, 0xd4, 0x1e, 0x57, 0xe2, 0xb1, 0xaf, 0xfd,
	0x0f, 0xfd, 0x19, 0xfd, 0x7f, 0x95, 0xc7, 0x36, 0xf7, 0x36, 0x79, 0x9b, 0x33, 0xe7, 0x9b, 0xef,
	0x7c, 0xe7, 0xe2, 0x63, 0x30, 0x06, 0x63, 0x3e, 0x1c, 0x49, 0xee, 0x0e, 0xc4, 0xf9, 0xd4, 0x13,
	0x52, 0xe0, 0xde, 0xe2, 0x86, 0x4e, 0xb9, 0xf5, 0x55, 0x83, 0x93, 0x06, 0x93, 0x2d, 0x77, 0x20,
	0xee, 0xdd, 0x5b, 0xe5, 0x22, 0xec, 0x63, 0xc0, 0x7c, 0x89, 0x7f, 0x41, 0xd6, 0xa1, 0x92, 0x99,
	0x5a, 0x49, 0x2b, 0x17, 0x2b, 0xbf, 0x9c, 0xaf, 0x3c, 0x3c, 0xaf, 0x51, 0xc9, 0x88, 0x02, 0xe0,
	0x15, 0xe8, 0x0e, 0xf7, 0x98, 0x2d, 0xb9, 0x70, 0xcd, 0x74, 0x49, 0x2b, 0xef, 0x57, 0xcc, 0x75,
	0x74, 0xe2, 0x27, 0x0b, 0x28, 0x5a, 0xb0, 0x1b, 0xa1, 0xda, 0xc1, 0xa4, 0xcf, 0x3c, 0x33, 0x53,
	0xd2, 0xca, 0x3a, 0x59, 0xb9, 0xb3, 0x3e, 0xc0, 0x7e, 0x83, 0xc9, 0x44, 0xd8, 0x74, 0x3c, 0xc3,
	0x33, 0xc8, 0x31, 0xcf, 0x13, 0x5e, 0xac, 0xeb, 0x68, 0x2d, 0x52, 0x3d, 0xf4, 0x91, 0x08, 0x82,
	0x7f, 0x43, 0x3e, 0xf2, 0x2a, 0x59, 0xc5, 0xca, 0xf1, 0x1a, 0x38, 0xe6, 0x8d, 0x41, 0xd6, 0x0d,
	0xec, 0x37, 0xb9, 0x2f, 0x85, 0x37, 0x4b, 0x6a, 0xf0, 0x2f, 0xe8, 0xbe, 0xa4, 0x9e, 0xac, 0x3d,
	0x51, 0x88, 0x05, 0xca, 0xba, 0x82, 0x13, 0xc2, 0x6c, 0xc6, 0xa7, 0xf2, 0x46, 0xb8, 0x03, 0xee,
	0x4d, 0xb8, 0x37, 0xa1, 0x2a, 0xdf, 0xdf, 0x41, 0x8f, 0x9e, 0xf6, 0xb8, 0xa3, 0xc8, 0x74, 0xb2,
	0xb8, 0xb0, 0x3e, 0x6b, 0xa0, 0x47, 0x7a, 0x1e, 0x9c, 0x00, 0xff, 0x07, 0x7d, 0xc4, 0xa8, 0x27,
	0xfb, 0x8c, 0xca, 0x38, 0xf0, 0x7a, 0x4d, 0x9b, 0x89, 0xbf, 0x99, 0x22, 0x0b, 0x30, 0xfe, 0xf3,
	0xac, 0x9c, 0x9b, 0xa9, 0x24, 0xeb, 0x6b, 0x1d, 0x0a, 0x53, 0x3a, 0x1b, 0x0b, 0xea, 0x58, 0x45,
	0xd0, 0xe7, 0xac, 0xd6, 0x97, 0x0c, 0xe4, 0x23, 0xf0, 0xcf, 0x95, 0x6f, 0xf4, 0x31, 0xbd, 0xd9,
	0xc7, 0xd5, 0x19, 0xc9, 0x3c, 0x7f, 0x46, 0x92, 0x21, 0xcc, 0x3e, 0x35, 0x84, 0x2f, 0x60, 0xcf,
	0xb7, 0x47, 0xcc, 0x09, 0xc6, 0xcc, 0xe9, 0xf2, 0x09, 0x33, 0x73, 0x5b, 0x5f, 0x84, 0x2e, 0xb2,
	0x8a, 0xc4, 0x13, 0xc8, 0x0b, 0x8f, 0x0f, 0xb9, 0x6b, 0xe6, 0x95, 0xf2, 0xd8, 0xc2, 0x12, 0x14,
	0x1d, 0xe6, 0x4b, 0xee, 0xaa, 0xf6, 0x99, 0x05, 0xe5, 0x5c, 0xbe, 0xc2, 0x4b, 0xc8, 0xfb, 0x92,
	0xca, 0xc0, 0x37, 0x77, 0x54, 0x4a, 0xbf, 0x6d, 0xad, 0x75, 0x47, 0x41, 0x48, 0x0c, 0xc5, 0x4b,
	0x00, 0x6a, 0xcb, 0x80, 0x8e, 0x95, 0x4c, 0xfd, 0xc7, 0x32, 0x97, 0x60, 0xd6, 0x35, 0x64, 0xc3,
	0x64, 0x11, 0x21, 0x3b, 0x63, 0x34, 0x1a, 0xfe, 0x1c, 0x51, 0x67, 0x3c, 0x82, 0xdc, 0x44, 0xb8,
	0x72, 0xa4, 0x0a, 0x9f, 0x23, 0x91, 0x81, 0x06, 0x64, 0x1c, 0x3a, 0x53, 0xb5, 0xce, 0x91, 0xf0,
	0x68, 0xbd, 0x82, 0xac, 0xca, 0x17, 0x21, 0x3b, 0x12, 0xc1, 0x9c, 0x23, 0x3c, 0x87, 0x35, 0x98,
	0x70, 0x37, 0x90, 0x2c, 0x26, 0x89, 0xad, 0xf0, 0xde, 0x67, 0xb6, 0x70, 0x9d, 0x98, 0x28, 0xb6,
	0xac, 0xff, 0x20, 0xa7, 0xbe, 0xb4, 0x90, 0xcc, 0x16, 0x0e, 0x4b, 0xc8, 0xc2, 0x33, 0x9a, 0x50,
	0x98, 0x30, 0xdf, 0xa7, 0x43, 0x16, 0xcf, 0x42, 0x62, 0x9e, 0xbd, 0x04, 0x7d, 0xde, 0x66, 0x3c,
	0x86, 0xc3, 0x5a, 0x8b, 0xd4, 0x6f, 0xba, 0xad, 0xfb, 0xf6, 0x63, 0xaf, 0xfd, 0xba, 0x7d, 0xff,
	0xb6, 0x6d, 0xa4, 0xb0, 0x08, 0x85, 0x2a, 0x21, 0xad, 0x37, 0xd5, 0x3b, 0x43, 0xc3, 0x3d, 0xd0,
	0x6b, 0xf5, 0x87, 0x2a, 0xe9, 0xf6, 0x48, 0xdd, 0x48, 0x9f, 0x3d, 0xc2, 0xee, 0x72, 0x4d, 0xf1,
	0x57, 0x38, 0xbe, 0xbd, 0x6b, 0x35, 0x9a, 0xdd, 0xc7, 0x4e, 0xb7, 0xda, 0xed, 0x75, 0x96, 0x68,
	0xe6, 0x2f, 0x5b, 0xed, 0x86, 0xa1, 0xe1, 0x2e, 0xec, 0x44, 0x66, 0xbd, 0x66, 0xa4, 0xc3, 0x18,
	0x77, 0xd5, 0x76, 0x2d, 0x74, 0x65, 0x10, 0x20, 0x1f, 0x1a, 0xf5, 0x9a, 0x91, 0xad, 0x0c, 0x01,
	0xa2, 0x00, 0xe1, 0x46, 0xc4, 0x77, 0x70, 0xb0, 0xb6, 0x1c, 0xf1, 0xcf, 0xb5, 0x4e, 0x6d, 0x5f,
	0x9e, 0xa7, 0x7f, 0x6c, 0xc2, 0x96, 0x96, 0x98, 0x95, 0xaa, 0x7c, 0xd3, 0xe0, 0x60, 0x11, 0xa9,
	0xea, 0xcf, 0x5c, 0x1b, 0x6f, 0x01, 0x1a, 0x4c, 0xc6, 0x2b, 0x08, 0xd7, 0x29, 0x56, 0x57, 0xd3,
	0xe9, 0xf6, 0xef, 0xda, 0x4a, 0x5d, 0x68, 0xf8, 0x1e, 0x0e, 0x3b, 0x41, 0xdf, 0xb7, 0x3d, 0xde,
	0x67, 0x5d, 0x51, 0xff, 0xc4, 0x5c, 0xe9, 0x6f, 0x08, 0xdf, 0xbe, 0xa4, 0x4e, 0xcd, 0xad, 0xb4,
	0x0f, 0x4e, 0x60, 0xa5, 0xca, 0xda, 0x85, 0xd6, 0xcf, 0xab, 0xdf, 0xc8, 0xe5, 0xf7, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x22, 0xca, 0x8c, 0xa8, 0x5a, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FlightInfoClient is the client API for FlightInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FlightInfoClient interface {
	GetInfoOnFlight(ctx context.Context, in *GetInfoOnFlightRequest, opts ...grpc.CallOption) (*GetFlightReply, error)
}

type flightInfoClient struct {
	cc *grpc.ClientConn
}

func NewFlightInfoClient(cc *grpc.ClientConn) FlightInfoClient {
	return &flightInfoClient{cc}
}

func (c *flightInfoClient) GetInfoOnFlight(ctx context.Context, in *GetInfoOnFlightRequest, opts ...grpc.CallOption) (*GetFlightReply, error) {
	out := new(GetFlightReply)
	err := c.cc.Invoke(ctx, "/flightinfoapi.FlightInfo/GetInfoOnFlight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FlightInfoServer is the server API for FlightInfo service.
type FlightInfoServer interface {
	GetInfoOnFlight(context.Context, *GetInfoOnFlightRequest) (*GetFlightReply, error)
}

// UnimplementedFlightInfoServer can be embedded to have forward compatible implementations.
type UnimplementedFlightInfoServer struct {
}

func (*UnimplementedFlightInfoServer) GetInfoOnFlight(ctx context.Context, req *GetInfoOnFlightRequest) (*GetFlightReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfoOnFlight not implemented")
}

func RegisterFlightInfoServer(s *grpc.Server, srv FlightInfoServer) {
	s.RegisterService(&_FlightInfo_serviceDesc, srv)
}

func _FlightInfo_GetInfoOnFlight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoOnFlightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FlightInfoServer).GetInfoOnFlight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/flightinfoapi.FlightInfo/GetInfoOnFlight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FlightInfoServer).GetInfoOnFlight(ctx, req.(*GetInfoOnFlightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FlightInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flightinfoapi.FlightInfo",
	HandlerType: (*FlightInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfoOnFlight",
			Handler:    _FlightInfo_GetInfoOnFlight_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "flightinfo.proto",
}

// FlightInfoAsyncClient is the client API for FlightInfoAsync service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FlightInfoAsyncClient interface {
	GetHistory(ctx context.Context, in *HistoryRequest, opts ...grpc.CallOption) (FlightInfoAsync_GetHistoryClient, error)
	SubscribeToEvents(ctx context.Context, opts ...grpc.CallOption) (FlightInfoAsync_SubscribeToEventsClient, error)
}

type flightInfoAsyncClient struct {
	cc *grpc.ClientConn
}

func NewFlightInfoAsyncClient(cc *grpc.ClientConn) FlightInfoAsyncClient {
	return &flightInfoAsyncClient{cc}
}

func (c *flightInfoAsyncClient) GetHistory(ctx context.Context, in *HistoryRequest, opts ...grpc.CallOption) (FlightInfoAsync_GetHistoryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FlightInfoAsync_serviceDesc.Streams[0], "/flightinfoapi.FlightInfoAsync/GetHistory", opts...)
	if err != nil {
		return nil, err
	}
	x := &flightInfoAsyncGetHistoryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FlightInfoAsync_GetHistoryClient interface {
	Recv() (*Flight, error)
	grpc.ClientStream
}

type flightInfoAsyncGetHistoryClient struct {
	grpc.ClientStream
}

func (x *flightInfoAsyncGetHistoryClient) Recv() (*Flight, error) {
	m := new(Flight)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *flightInfoAsyncClient) SubscribeToEvents(ctx context.Context, opts ...grpc.CallOption) (FlightInfoAsync_SubscribeToEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FlightInfoAsync_serviceDesc.Streams[1], "/flightinfoapi.FlightInfoAsync/SubscribeToEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &flightInfoAsyncSubscribeToEventsClient{stream}
	return x, nil
}

type FlightInfoAsync_SubscribeToEventsClient interface {
	Send(*ReceiptConfirmirmation) error
	Recv() (*FlightPdu, error)
	grpc.ClientStream
}

type flightInfoAsyncSubscribeToEventsClient struct {
	grpc.ClientStream
}

func (x *flightInfoAsyncSubscribeToEventsClient) Send(m *ReceiptConfirmirmation) error {
	return x.ClientStream.SendMsg(m)
}

func (x *flightInfoAsyncSubscribeToEventsClient) Recv() (*FlightPdu, error) {
	m := new(FlightPdu)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FlightInfoAsyncServer is the server API for FlightInfoAsync service.
type FlightInfoAsyncServer interface {
	GetHistory(*HistoryRequest, FlightInfoAsync_GetHistoryServer) error
	SubscribeToEvents(FlightInfoAsync_SubscribeToEventsServer) error
}

// UnimplementedFlightInfoAsyncServer can be embedded to have forward compatible implementations.
type UnimplementedFlightInfoAsyncServer struct {
}

func (*UnimplementedFlightInfoAsyncServer) GetHistory(req *HistoryRequest, srv FlightInfoAsync_GetHistoryServer) error {
	return status.Errorf(codes.Unimplemented, "method GetHistory not implemented")
}
func (*UnimplementedFlightInfoAsyncServer) SubscribeToEvents(srv FlightInfoAsync_SubscribeToEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeToEvents not implemented")
}

func RegisterFlightInfoAsyncServer(s *grpc.Server, srv FlightInfoAsyncServer) {
	s.RegisterService(&_FlightInfoAsync_serviceDesc, srv)
}

func _FlightInfoAsync_GetHistory_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HistoryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FlightInfoAsyncServer).GetHistory(m, &flightInfoAsyncGetHistoryServer{stream})
}

type FlightInfoAsync_GetHistoryServer interface {
	Send(*Flight) error
	grpc.ServerStream
}

type flightInfoAsyncGetHistoryServer struct {
	grpc.ServerStream
}

func (x *flightInfoAsyncGetHistoryServer) Send(m *Flight) error {
	return x.ServerStream.SendMsg(m)
}

func _FlightInfoAsync_SubscribeToEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FlightInfoAsyncServer).SubscribeToEvents(&flightInfoAsyncSubscribeToEventsServer{stream})
}

type FlightInfoAsync_SubscribeToEventsServer interface {
	Send(*FlightPdu) error
	Recv() (*ReceiptConfirmirmation, error)
	grpc.ServerStream
}

type flightInfoAsyncSubscribeToEventsServer struct {
	grpc.ServerStream
}

func (x *flightInfoAsyncSubscribeToEventsServer) Send(m *FlightPdu) error {
	return x.ServerStream.SendMsg(m)
}

func (x *flightInfoAsyncSubscribeToEventsServer) Recv() (*ReceiptConfirmirmation, error) {
	m := new(ReceiptConfirmirmation)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FlightInfoAsync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "flightinfoapi.FlightInfoAsync",
	HandlerType: (*FlightInfoAsyncServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetHistory",
			Handler:       _FlightInfoAsync_GetHistory_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SubscribeToEvents",
			Handler:       _FlightInfoAsync_SubscribeToEvents_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "flightinfo.proto",
}
