Why Go?
15 Mar 2014
Tags: go golang 

Satish Talim
Go Hobbyist
satish@joshsoftware.com
http://satishtalim.com/
@IndianGuru

* Who is this guy?
- Programming addict
- C, Java, Ruby, Go
- Director, JoshSoftware
.link http://www.joshsoftware.com/team The JoshSoftware team

* My Prediction
- 1995 Java - at the time, people in India only knew the "Jawa" motorcycle!
- 2005 Ruby - at the time, only Reevik Technologies (now defunct) had started work with Ruby in Pune.
- 2015 Go - JoshSoftware is already into Go!

.image ./jawa.jpg

* The next decade belongs to Go

In the 1970s, Fortran and Cobol where champions. In the 1980s, we had Pascal and C. In the 1990s, Basic and C++. In the 2000s, Java and C#. In the 2010s we have Ruby and  Python. Why would the years to come be any different?

If history is anything to go by it seems inevitable that a new language will dominate the next decade. A new language will also need to solve problems that matter to this expanded world and that the existing languages will be slow to provide (or find impossible to provide).

Could that new language be Go?

* What's Go?

* Go is...

the [[http://www.amazon.com/gp/product/B007Y6KDTG/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=B007Y6KDTG&linkCode=as2&tag=satishtalimsw-20][most exciting]] new mainstream language to appear in atleast 15 years and is the first such language that is *aimed*squarely*at*21st*century*computers* - and their programmers.

* Go has...

been in development at Google since 2007 and as an open source project since 2009.

* Go design

[[http://www.amazon.com/gp/product/1469769166/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=1469769166&linkCode=as2&tag=satishtalimsw-20][Google researchers]] designed the Go programming language that helped them solve the problems they had:

- software needs to be built quickly,
- the language should *run*well*on*modern*multi-core*hardware*,
- work well in a networked environment, 
- be a pleasure to use.

* With Go...

you code less, compile quicker, execute_faster => have more fun! 

.play hello.go

* Python and Ruby programmers...

come to Go because they don't have to surrender much expressiveness, but gain performance and get to play with [[http://commandcenter.blogspot.de/2012/06/less-is-exponentially-more.html][concurrency]] (which is baked right into the language with channels and goroutines).

* Go is a language...
- that has the feel of a dynamic language like Ruby or Python, but has the [[http://www.amazon.com/gp/product/1469769166/ref=as_li_ss_tl?ie=UTF8&camp=1789&creative=390957&creativeASIN=1469769166&linkCode=as2&tag=satishtalimsw-20][performance and safety]] of languages like C or Java.
- It is a completely open-source language, distributed with a BSD license, so it can be used by everybody even for commercial purposes without a fee, and it can even be changed by others.

* Uses of the language

Go:

- can be used for systems programming
- is a good fit for game server development
- can be used for Complex event processing
- is also a general programming language, useful for solving text-processing problems, making web apps, or even scripting-like applications

However, Go is _not_suited_ for real-time software because of its garbage collection and automatic memory allocation.

* Go Features

* Language Simplicity 

Go is free of cruft (superfluous) and is very well designed.

Most programming languages have been around for a long time, accumulating design cruft and weird behaviors that don't make sense anymore.

* Go comes with well designed APIs for many of today's requirements:
- HTTP server and client
- JSON
- Unicode
- Cryptography
- HTML and plain text template engine

If you are making a web application that does not need a database, the standard library has you covered.

* Formatting and coding style 

In Go, this is a non-topic. The only acceptable formatting is the one generated by the command:

- `go`fmt`

The compiler knows no warnings, there are either errors or no messages.

.play cerrors.go

* Distributing binaries

If you are a beginning Go programmer, you can just mail your executable to your friends or your parents, as long as they run the same architecture and operating system.

* Documentation
- [[http://tour.golang.org/#1][Interactive introduction into the language]]
- Regular posts on the [[http://blog.golang.org/index][Go blog]] explaining specific areas, like string handling, arrays and slices and code formatting amongst others
- [[http://golang.org/ref/spec][Language specification]] that doubles as a language reference
- API documentation and examples for the [[http://golang.org/pkg/][standard library]]

* Why learn Go?

For me to invest the time to learn a new language, it must affirm at least one of these two questions:
- Is this a language I could realistically use in a production environment?
- Will this language grow my ability to solve complex problems in different ways?

The answer to both of these questions is *yes*.

* Organizations using Go

Since May 2010, Go is used in production at *Google* for the back-end infrastructure, e.g. writing programs for administering complex environments. Google wants to invest in it and the language is production-worthy.

Go is being used in many organizations beyond Google like [[http://www.quora.com/Go-programming-language/Is-Google-Go-ready-for-production-use/answer/Kunal-Anand][BBC Worldwide]], [[https://plus.google.com/114945221884326152379/posts/d1SVaqkRyTL][Novartis]], [[https://plus.google.com/114945221884326152379/posts/d1SVaqkRyTL][bitly]], [[http://torbit.com/blog/2013/02/19/big-data-at-torbit/][Torbit]], [[https://blog.cyphertite.com/go-at-conformal/][Conformal]] and [[http://blog.golang.org/go-at-heroku][Heroku]] to name a few. 

* Success Stories with Go

The [[https://code.google.com/p/go-wiki/wiki/SuccessStories][Go success stories]] from around the web makes an interesting read too.

* Go International Conferences

[[http://www.gophercon.com/][The First Ever Go Conference]] is being held in Denver CO, USA this April and their sponsors list has some interesting company names like Ubuntu, Paypal, Apcera, Stripe, Poptip, Canonical, Iron.io amongst others.

.image ./gophercon.jpg

I will be representing my company JoshSoftware at the conference.

The [[http://www.dotgo.eu/][First Ever European Go Conference]] is being held in Paris, France this October.

* Will Android switch from Java to Go?

Apple owns Objective-C. Microsoft owns C#. Google obviously _does_not_own_ Java. 

[[http://www.androidauthority.com/android-switch-java-go-86040/][If Google makes the switch from Java to Go for Android]]:

- Then Android developers will have to learn Go. 
- In the long run it definitely sounds like something that would be ideal for Google since they'd have full control over what happens with the language. 
- Since Go's such a friendly language they might even get developers to be interested in learning it, just like the vast majority of iOS developers had to learn Objective-C to make iOS apps.

* Go and Cloud Computing

Java is an amazing language but *it*predates*the*cloud*. It is much easier to build and deploy high performance applications in virtual environments in Go.

[[http://www.businessinsider.in/Google-Has-Created-A-Programming-Language-That-Thumbs-Its-Nose-At-Oracle/articleshow/22233196.cms][If Go could replace Java for cloud computing]], what would that do to Oracle? 

- It would remove a lot of connection to Oracle from companies in the cloud space.
- It would ignite a whole new set of innovation based around Go libraries, frameworks, platforms and services. 
- The lock-in that Java has within the enterprise would also dissipate as companies move core areas of development to Go.

* The coming decade

It's been a pure joy to work with Go and I'm sure it will only continue to improve and grow as a language and community.

The next decade surely belongs to Go. 

.image ./small.png

*Are*YOU*prepared?*
